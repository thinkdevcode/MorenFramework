////////////////////////////////////////////////////////////
//
// Moren - 2D RPG Framework
// Copyright (C) 2009 Eugene Alfonso (gin@gtproductions.org)
//
// This software is provided 'as-is', without any express or implied warranty.
// In no event will the authors be held liable for any damages arising from the use of this software.
//
////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////
// Headers
//
////////////////////////////////////////////////////////////
#include "GUI.hpp"

namespace Moren
{

////////////////////////////////////////////////////////////
// Default constructor
//
////////////////////////////////////////////////////////////
GUI::GUI()
{ }

////////////////////////////////////////////////////////////
// Destructor : Calls Clear()
//
////////////////////////////////////////////////////////////
GUI::~GUI()
{
	Clear();
}

////////////////////////////////////////////////////////////
// Overloaded "+=" Operator : Add a GUI object to the list
//
////////////////////////////////////////////////////////////
GUI& GUI::operator +=(GUIObject* object)
{
	myGUI.push_back( object );
	return *this;
}

////////////////////////////////////////////////////////////
/// Add a GUI object to the list
///
////////////////////////////////////////////////////////////
void GUI::Add(GUIObject* object)
{
	myGUI.push_back( object );
}

////////////////////////////////////////////////////////////
// Dispatch an event packet to all GUI objects
//
////////////////////////////////////////////////////////////
void GUI::DispatchEvent(Event& EventPacket)
{
	for (GUIObjectList::iterator ObjectIt = myGUI.begin(); ObjectIt != myGUI.end(); ++ObjectIt)
		(*ObjectIt)->ProcessEvent(EventPacket);
}

////////////////////////////////////////////////////////////
// Delete all pointers of objects and clear list
//
////////////////////////////////////////////////////////////
void GUI::Clear()
{
	for (GUIObjectList::iterator ObjectIt = myGUI.begin(); ObjectIt != myGUI.end(); ++ObjectIt)
		delete (*ObjectIt);
	myGUI.clear();
}

////////////////////////////////////////////////////////////
// /see Drawable::Render
//
////////////////////////////////////////////////////////////
void GUI::Render(RenderTarget &Target, RenderQueue& queue) const
{
	for (GUIObjectList::const_iterator ObjectIt = myGUI.begin(); ObjectIt != myGUI.end(); ++ObjectIt)
		(*ObjectIt)->Update();
	for (GUIObjectList::const_iterator ObjectIt = myGUI.begin(); ObjectIt != myGUI.end(); ++ObjectIt)
		(*ObjectIt)->Render(Target, queue);
}

} // namespace Moren